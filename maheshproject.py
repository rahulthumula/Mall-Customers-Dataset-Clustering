# -*- coding: utf-8 -*-
"""MaheshProject.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1A_i6Xs4gZBWQBYWFopxcq6Tk-kLHlaTf
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns 

from sklearn.cluster import KMeans
from sklearn.metrics.cluster import silhouette_score
from sklearn.preprocessing import StandardScaler

from pathlib import Path

plt.style.use('ggplot')

df = pd.read_csv('Mall_Customers.csv')
df.head()

del df['CustomerID']

df.info()

df.isnull().sum()

df.columns

# boxplots for outlier analysis
columns = df.columns[1:] 

fig,axs = plt.subplots(1,len(columns),figsize=(1.5*len(columns),3),dpi=150)
for i,column in enumerate(columns):
    _ = sns.boxplot(df,y=column,ax=axs[i],width=[0.5])

_ = fig.tight_layout()

_ = sns.pairplot(df,vars=df.columns[1:],hue='Gender')

_ = sns.pairplot(df,vars=df.columns[1:])

sc = StandardScaler()
X = sc.fit_transform(df.iloc[:,2:4])

inertia_list = []
for k in range(2,16):
    km = KMeans(n_clusters=k,random_state=1,init='k-means++').fit(X)
    inertia_list.append(km.inertia_)

fig,ax = plt.subplots(1,1,figsize=(5,3),dpi=150)
_ = ax.plot(np.arange(2,16),inertia_list,'.-')
_ = ax.set_xlabel('Number of clusters')
_ = ax.set_ylabel('Inertia')

# fit kmeans model with 5 clusters
km = KMeans(n_clusters=5,random_state=1,init='k-means++').fit(X)

# obtain predictions
cluster_labels = km.predict(X)

# Silhouette score
score = silhouette_score(X,cluster_labels)
print('Silhouette score : %5.3f'%score)

#cluster_centers = km.cluster_centers_
cluster_centers_orig_scale = pd.DataFrame(
    sc.inverse_transform(km.cluster_centers_),
    columns=df.columns[2:4]
)
cluster_centers_orig_scale

df['clusters'] = cluster_labels

fig,ax = plt.subplots(1,1,figsize=(5,4),dpi=150)
# plot data
_ = sns.scatterplot(
    data=df,
    x='Annual Income (k$)',
    y='Spending Score (1-100)',
    hue='clusters',
    palette=sns.color_palette("Set1",5),
    ax=ax
)
_ = sns.scatterplot(
    data=cluster_centers_orig_scale,
    x='Annual Income (k$)',
    y='Spending Score (1-100)',
    hue=np.arange(5),
    palette=sns.color_palette("Set1",5),
    ax=ax,
    #style='Centers',
    marker='x',
    s=50,
    legend=False
)
_ = ax.legend(
    bbox_to_anchor=(1.1,0.5), loc='center', borderaxespad=0,title='Cluster')